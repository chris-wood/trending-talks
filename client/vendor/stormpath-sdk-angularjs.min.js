/**
 * stormpath-sdk-angularjs
 * Copyright Stormpath, Inc. 2015
 * 
 * @version v0.0.2-dev-2015-02-10
 * @link https://github.com/stormpath/stormpath-sdk-angularjs
 * @license Apache-2.0
 */
"undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports&&(module.exports="ui.router"),function(a,b){"use strict";b.module("stormpath.auth",["stormpath.CONFIG"]).config(["$injector","STORMPATH_CONFIG",function(a,b){var c={$get:["$http","$user","$rootScope",function(a,c,d){function e(){return this}function f(){return c.get()}function g(a){d.$broadcast(b.AUTHENTICATION_SUCCESS_EVENT_NAME,a)}function h(a){d.$broadcast(b.AUTHENTICATION_FAILURE_EVENT_NAME,a)}return e.prototype.authenticate=function(c){var d=a.post(b.AUTHENTICATION_ENDPOINT,c,{withCredentials:!0,params:{grant_type:"password"}}),e=d.then(f).then(g);return d["catch"](h),e},e.prototype.endSession=function(){var c=a.get(b.DESTROY_SESSION_ENDPOINT);return c.then(function(){d.$broadcast(b.SESSION_END_EVENT)},function(a){console.error("logout error",a)}),c},new e}]};a.get("$provide").provider(b.AUTH_SERVICE_NAME,c)}]),b.module("stormpath.CONFIG",[]).constant("STORMPATH_CONFIG",{AUTHENTICATION_ENDPOINT:"/oauth/token",CURRENT_USER_URI:"/api/users/current",DESTROY_SESSION_ENDPOINT:"/logout",GET_USER_EVENT:"$currentUser",SESSION_END_EVENT:"$sessionEnd",UNAUTHORIZED_EVENT:"unauthorized",LOGIN_STATE_NAME:"login",FORBIDDEN_STATE_NAME:"forbidden",AUTHENTICATION_SUCCESS_EVENT_NAME:"$authenticated",AUTHENTICATION_FAILURE_EVENT_NAME:"$authenticationFailure",AUTH_SERVICE_NAME:"$auth",NOT_LOGGED_IN_EVENT:"$notLoggedin"}),b.module("stormpath",["stormpath.CONFIG","stormpath.auth","stormpath.userService"]).provider("$stormpath",[function(){this.$get=["$user","$state","$cookieStore","STORMPATH_CONFIG","$rootScope",function(a,b,c,d,e){function f(){return this.postLoginState=null,this.postLoginParams=null,this}return f.prototype.stateChangeInterceptor=function(){e.$on("$stateChangeStart",function(c,d,f){if(!d.authenticate&&!d.authorize||a.currentUser||(c.preventDefault(),a.get().then(function(){b.go(d.name,f)},function(){return e.$broadcast("stateChangeUnauthenticated",d,f)})),a.isLoggedIn&&d.authenticate&&d.authorize)if(1===Object.keys(d.authorize).length&&d.authorize.group){if(!a.currentUser.inGroup(d.authorize.group))return c.preventDefault(),e.$broadcast("stateChangeUnauthorized",d,f)}else console.error("Unknown authorize configuration for state",d)})},new f}]}]),b.module("stormpath.userService",["stormpath.CONFIG"]).provider("$user",[function(){function a(a){var b=this;Object.keys(a).map(function(c){b[c]=a[c]})}a.prototype.inGroup=function(a){return this.groups.items.filter(function(b){return b.name===a}).length>0},this.$get=["$q","$http","STORMPATH_CONFIG","$rootScope",function(b,c,d,e){function f(){return this.cachedUserOp=null,this.currentUser=null,this}function g(a){e.$broadcast(d.GET_USER_EVENT,a)}function h(){e.$broadcast(d.NOT_LOGGED_IN_EVENT)}f.prototype.get=function(){var e=b.defer(),f=this;return f.cachedUserOp?f.cachedUserOp.promise:f.currentUser?(e.resolve(f.currentUser),e.promise):(f.cachedUserOp=e,c.get(d.CURRENT_USER_URI).then(function(b){f.cachedUserOp=null,f.currentUser=new a(b.data),g(f.currentUser),e.resolve(f.currentUser)},function(a){401===a.status&&h(),f.cachedUserOp=null,e.reject(a)}),e.promise)};var i=new f;return e.$on(d.SESSION_END_EVENT,function(){i.currentUser=null}),i}]}])}(window,window.angular);